{"version":3,"file":"ui-CUR-1bmS.js","sources":["../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-object.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","\"use client\";\nimport { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get iterationDuration() {\n        const { delay = 0 } = this.options || {};\n        return this.duration + millisecondsToSeconds(delay);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get iterationDuration() {\n        const { delay = 0 } = this.options || {};\n        return this.duration + millisecondsToSeconds(delay);\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type = \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get iterationDuration() {\n        return this.animation.iterationDuration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","\"use client\";\nimport { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","\"use client\";\nimport { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","\"use client\";\nimport { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","\"use client\";\nimport { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","\"use client\";\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","\"use client\";\nimport { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","\"use client\";\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","\"use client\";\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","\"use client\";\nimport { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Include externalRef in dependencies to ensure the callback updates\n     * when the ref changes, allowing proper ref forwarding.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","\"use client\";\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","\"use client\";\nimport { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n"],"names":["LayoutGroupContext","createContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","clamp","min","max","v","MotionGlobalConfig","isNumericalString","test","isObject","value","isZeroValueString","memo","callback","result","undefined","noop","any","combineFunctions","a","b","pipe","transformers","reduce","progress","from","to","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","c","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","easeIn","easeOut","easeInOut","isBezierDefinition","Array","isArray","easingLookup","linear","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","has","step","schedule","keepAlive","immediate","queue","cancel","delete","process","frameData","forEach","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","time","set","newTime","queueMicrotask","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","number","parse","parseFloat","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","transformer","map","hueToRgb","q","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","current","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","currentTime","holdTime","playbackSpeed","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","iterationDuration","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","makeAnimationInstant","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","subject","owner","HTMLElement","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","isNone","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","getValueAsType","MotionValue","init","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","addDependent","removeDependent","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","microtask","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","isElementKeyboardAccessible","hasAttribute","isSVGElement","isMotionValue","valueTypes","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","scaleCorrectors","isForcedMotionValue","layoutId","translateAlias","numTransforms","buildHTMLStyles","latestValues","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","visualState","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","styleProp","viewBox","attrs","transformBox","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","Component","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","useRender","ref","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","children","renderedChildren","getValueState","resolveVariantFromProps","custom","resolveMotionValue","makeLatestValues","presenceContext","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","renderState","makeState","useRef","useConstant","prevProps","newValues","liveStyle","useHTMLVisualState","scrapeMotionValuesFromProps$1","charAt","toUpperCase","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","instance","onMount","mount","unmount","camelToDash","str","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","scheduleRenderMicrotask","animationState","animateChanges","MotionHandoffMarkAsComplete","enteringChildren","allowProjection","createMotionComponent","preloadedFeatures","features","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","createMotionProxy","Proxy","componentCache","factory","_target","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","scheduleRender","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","initPrefersReducedMotion","addChild","remove","removeChild","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","prevPresenceContext","listener","nextValue","prevValue","addValue","hasValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getDefaultTransition","getTransformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","args","DOMVisualElement","arguments","compareDocumentPosition","childSubscription","textContent","renderHTML","elementStyle","applyProjectionStyles","HTMLVisualElement","isProjecting","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","createDomVisualElement","resolveVariant","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","all","setTarget","calcChildStagger","sort","numChildren","size","maxStaggerDuration","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","addDomEvent","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","motion","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251]}